//
//  main.swift
//  ByeDarkSkyLocalizableScript
//
//  Created by Jinwoo Kim on 6/26/22.
//

import Foundation

let fileManager: FileManager = .default

let projectURL: URL = .init(filePath: fileManager.currentDirectoryPath, directoryHint: .isDirectory)
    .appending(component: "ByeDarkSky", directoryHint: .isDirectory)
let localizableURL: URL = projectURL
    .appending(path: "en", directoryHint: .isDirectory)
    .appendingPathExtension("lproj")
    .appending(path: "Localizable", directoryHint: .notDirectory)
    .appendingPathExtension("strings")
let resultURL: URL = projectURL
    .appending(path: "Service", directoryHint: .isDirectory)
    .appending(path: "Localizable", directoryHint: .isDirectory)
    .appending(path: "Localizable", directoryHint: .notDirectory)
    .appendingPathExtension("swift")

guard fileManager.fileExists(atPath: localizableURL.path(percentEncoded: false)) else {
    fatalError("\(localizableURL) does not exist.")
}

let dictionary: NSDictionary = .init(contentsOf: localizableURL)!
let keys: [String] = dictionary
    .allKeys
    .compactMap { $0 as? String }
    .sorted()

var result: String = """
/* Automatically generated by ByeDarkSkyLocalizableScript. */

import Foundation

enum Localizable: String {

"""

keys.forEach { key in
    result += """
        case \(key)
    
    """
}

result += """
}

"""

try! result.write(to: resultURL, atomically: true, encoding: .utf8)
